{"version":3,"file":"email-pass-auth.provider.js","sourceRoot":"","sources":["../../../../.ng_build/auth/providers/email-pass-auth.provider.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\nimport { NgEmailPassAuthProviderConfig } from './email-pass-auth.options';\nimport { NbAuthResult } from '../services/auth.service';\nimport { NbAbstractAuthProvider } from './abstract-auth.provider';\nimport { getDeepFromObject } from '../helpers';\n\n/**\n * The most common authentication provider.\n * The following options are available (with default values):\n *\n *\n *\n * @example\n *\n * Default settings object:\n * ```\n * {\n *  baseEndpoint: '',\n *  login: {\n *    alwaysFail: false,\n *    rememberMe: true,\n *    endpoint: '/api/auth/login',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Login/Email combination is not correct, please try again.'],\n *    defaultMessages: ['You have been successfully logged in.'],\n *  },\n *  register: {\n *    alwaysFail: false,\n *    rememberMe: true,\n *    endpoint: '/api/auth/register',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully registered.'],\n *  },\n *  logout: {\n *    alwaysFail: false,\n *    endpoint: '/api/auth/logout',\n *    method: 'delete',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['You have been successfully logged out.'],\n *  },\n *  requestPass: {\n *    endpoint: '/api/auth/request-pass',\n *    method: 'post',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Reset password instructions have been sent to your email.'],\n *  },\n *  resetPass: {\n *    endpoint: '/api/auth/reset-pass',\n *    method: 'put',\n *    redirect: {\n *      success: '/',\n *      failure: null,\n *    },\n *    resetPasswordTokenKey: 'reset_password_token',\n *    defaultErrors: ['Something went wrong, please try again.'],\n *    defaultMessages: ['Your password has been successfully changed.'],\n *  },\n *  token: {\n *    key: 'data.token',\n *    getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n *      this.getConfigValue('token.key')),\n *  },\n *  errors: {\n *    key: 'data.errors',\n *    getter: (module: string, res: HttpErrorResponse) => getDeepFromObject(res.error,\n *      this.getConfigValue('errors.key'),\n *      this.getConfigValue(`${module}.defaultErrors`)),\n *  },\n *  messages: {\n *    key: 'data.messages',\n *    getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n *      this.getConfigValue('messages.key'),\n *      this.getConfigValue(`${module}.defaultMessages`)),\n *  },\n *}\n * ```\n */\n@Injectable()\nexport class NbEmailPassAuthProvider extends NbAbstractAuthProvider {\n\n  protected defaultConfig: NgEmailPassAuthProviderConfig = {\n    baseEndpoint: '',\n    login: {\n      alwaysFail: false,\n      rememberMe: true,\n      endpoint: '/api/auth/login',\n      method: 'post',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      defaultErrors: ['Login/Email combination is not correct, please try again.'],\n      defaultMessages: ['You have been successfully logged in.'],\n    },\n    register: {\n      alwaysFail: false,\n      rememberMe: true,\n      endpoint: '/api/auth/register',\n      method: 'post',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['You have been successfully registered.'],\n    },\n    logout: {\n      alwaysFail: false,\n      endpoint: '/api/auth/logout',\n      method: 'delete',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['You have been successfully logged out.'],\n    },\n    requestPass: {\n      endpoint: '/api/auth/request-pass',\n      method: 'post',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Reset password instructions have been sent to your email.'],\n    },\n    resetPass: {\n      endpoint: '/api/auth/reset-pass',\n      method: 'put',\n      redirect: {\n        success: '/',\n        failure: null,\n      },\n      resetPasswordTokenKey: 'reset_password_token',\n      defaultErrors: ['Something went wrong, please try again.'],\n      defaultMessages: ['Your password has been successfully changed.'],\n    },\n    token: {\n      key: 'data.token',\n      getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n        this.getConfigValue('token.key')),\n    },\n    errors: {\n      key: 'data.errors',\n      getter: (module: string, res: HttpErrorResponse) => getDeepFromObject(res.error,\n        this.getConfigValue('errors.key'),\n        this.getConfigValue(`${module}.defaultErrors`)),\n    },\n    messages: {\n      key: 'data.messages',\n      getter: (module: string, res: HttpResponse<Object>) => getDeepFromObject(res.body,\n        this.getConfigValue('messages.key'),\n        this.getConfigValue(`${module}.defaultMessages`)),\n    },\n  };\n\n  constructor(protected http: HttpClient, private route: ActivatedRoute) {\n    super();\n  }\n\n  authenticate(data?: any): Observable<NbAuthResult> {\n    const method = this.getConfigValue('login.method');\n    const url = this.getActionEndpoint('login');\n    return this.http.request(method, url, { body: data, observe: 'response' })\n      .map((res) => {\n        if (this.getConfigValue('login.alwaysFail')) {\n          throw this.createFailResponse(data);\n        }\n\n        return res;\n      })\n      .map((res) => {\n        return new NbAuthResult(\n          true,\n          res,\n          this.getConfigValue('login.redirect.success'),\n          [],\n          this.getConfigValue('messages.getter')('login', res),\n          this.getConfigValue('token.getter')('login', res));\n      })\n      .catch((res) => {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n          errors = this.getConfigValue('errors.getter')('login', res);\n        } else {\n          errors.push('Something went wrong.');\n        }\n\n        return Observable.of(\n          new NbAuthResult(\n            false,\n            res,\n            this.getConfigValue('login.redirect.failure'),\n            errors,\n          ));\n      });\n  }\n\n  register(data?: any): Observable<NbAuthResult> {\n    const method = this.getConfigValue('register.method');\n    const url = this.getActionEndpoint('register');\n    return this.http.request(method, url, { body: data, observe: 'response' })\n      .map((res) => {\n        if (this.getConfigValue('register.alwaysFail')) {\n          throw this.createFailResponse(data);\n        }\n\n        return res;\n      })\n      .map((res) => {\n        return new NbAuthResult(\n          true,\n          res,\n          this.getConfigValue('register.redirect.success'),\n          [],\n          this.getConfigValue('messages.getter')('register', res),\n          this.getConfigValue('token.getter')('register', res));\n      })\n      .catch((res) => {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n          errors = this.getConfigValue('errors.getter')('register', res);\n        } else {\n          errors.push('Something went wrong.');\n        }\n\n        return Observable.of(\n          new NbAuthResult(\n            false,\n            res,\n            this.getConfigValue('register.redirect.failure'),\n            errors,\n          ));\n      });\n  }\n\n  requestPassword(data?: any): Observable<NbAuthResult> {\n    const method = this.getConfigValue('requestPass.method');\n    const url = this.getActionEndpoint('requestPass');\n    return this.http.request(method, url, { body: data, observe: 'response' })\n      .map((res) => {\n        if (this.getConfigValue('requestPass.alwaysFail')) {\n          throw this.createFailResponse();\n        }\n\n        return res;\n      })\n      .map((res) => {\n        return new NbAuthResult(\n          true,\n          res,\n          this.getConfigValue('requestPass.redirect.success'),\n          [],\n          this.getConfigValue('messages.getter')('requestPass', res));\n      })\n      .catch((res) => {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n          errors = this.getConfigValue('errors.getter')('requestPass', res);\n        } else {\n          errors.push('Something went wrong.');\n        }\n\n        return Observable.of(\n          new NbAuthResult(\n            false,\n            res,\n            this.getConfigValue('requestPass.redirect.failure'),\n            errors,\n          ));\n      });\n  }\n\n  resetPassword(data: any = {}): Observable<NbAuthResult> {\n    const tokenKey = this.getConfigValue('resetPass.resetPasswordTokenKey');\n    data[tokenKey] = this.route.snapshot.queryParams[tokenKey];\n\n    const method = this.getConfigValue('resetPass.method');\n    const url = this.getActionEndpoint('resetPass');\n    return this.http.request(method, url, { body: data, observe: 'response' })\n      .map((res) => {\n        if (this.getConfigValue('resetPass.alwaysFail')) {\n          throw this.createFailResponse();\n        }\n\n        return res;\n      })\n      .map((res) => {\n        return new NbAuthResult(\n          true,\n          res,\n          this.getConfigValue('resetPass.redirect.success'),\n          [],\n          this.getConfigValue('messages.getter')('resetPass', res));\n      })\n      .catch((res) => {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n          errors = this.getConfigValue('errors.getter')('resetPass', res);\n        } else {\n          errors.push('Something went wrong.');\n        }\n\n        return Observable.of(\n          new NbAuthResult(\n            false,\n            res,\n            this.getConfigValue('resetPass.redirect.failure'),\n            errors,\n          ));\n      });\n  }\n\n  logout(): Observable<NbAuthResult> {\n\n    const method = this.getConfigValue('logout.method');\n    const url = this.getActionEndpoint('logout');\n\n    return Observable.of({})\n      .switchMap((res: any) => {\n        if (!url) {\n          return Observable.of(res);\n        }\n        return this.http.request(method, url, { observe: 'response' });\n      })\n      .map((res) => {\n        if (this.getConfigValue('logout.alwaysFail')) {\n          throw this.createFailResponse();\n        }\n\n        return res;\n      })\n      .map((res) => {\n        return new NbAuthResult(\n          true,\n          res,\n          this.getConfigValue('logout.redirect.success'),\n          [],\n          this.getConfigValue('messages.getter')('logout', res));\n      })\n      .catch((res) => {\n        let errors = [];\n        if (res instanceof HttpErrorResponse) {\n          errors = this.getConfigValue('errors.getter')('logout', res);\n        } else {\n          errors.push('Something went wrong.');\n        }\n\n        return Observable.of(\n          new NbAuthResult(\n            false,\n            res,\n            this.getConfigValue('logout.redirect.failure'),\n            errors,\n          ));\n      });\n  }\n\n  protected getActionEndpoint(action: string): string {\n    const actionEndpoint: string = this.getConfigValue(`${action}.endpoint`);\n    const baseEndpoint: string = this.getConfigValue('baseEndpoint');\n    return baseEndpoint + actionEndpoint;\n  }\n}\n"]}