{"version":3,"file":"token.service.js","sourceRoot":"","sources":["../../../../.ng_build/auth/services/token.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/observable/of';\n\nimport { NB_AUTH_OPTIONS_TOKEN, NB_AUTH_TOKEN_WRAPPER_TOKEN } from '../auth.options';\nimport { deepExtend, getDeepFromObject, urlBase64Decode } from '../helpers';\n\n@Injectable()\nexport class NbAuthSimpleToken {\n\n  protected token: string = '';\n\n  setValue(token: string) {\n    this.token = token;\n  }\n\n  getValue() {\n    return this.token;\n  }\n}\n\n@Injectable()\nexport class NbAuthJWTToken extends NbAuthSimpleToken {\n\n  getPayload() {\n    const parts = this.token.split('.');\n\n    if (parts.length !== 3) {\n      throw new Error(`The token ${this.token} is not valid JWT token and must consist of three parts.`);\n    }\n\n    const decoded = urlBase64Decode(parts[1]);\n    if (!decoded) {\n      throw new Error(`The token ${this.token} is not valid JWT token and cannot be decoded.`);\n    }\n\n    return JSON.parse(decoded);\n  }\n\n  getTokenExpDate(): Date {\n    const decoded = this.getPayload();\n    if (!decoded.hasOwnProperty('exp')) {\n      return null;\n    }\n\n    const date = new Date(0);\n    date.setUTCSeconds(decoded.exp);\n\n    return date;\n  }\n}\n\n@Injectable()\nexport class NbTokenService {\n\n  protected defaultConfig: any = {\n    token: {\n      key: 'auth_app_token',\n\n      getter: (): Observable<NbAuthSimpleToken> => {\n        const tokenValue = localStorage.getItem(this.getConfigValue('token.key'));\n        this.tokenWrapper.setValue(tokenValue);\n        return Observable.of(this.tokenWrapper);\n      },\n\n      setter: (token: string|NbAuthSimpleToken): Observable<null> => {\n        const raw = token instanceof NbAuthSimpleToken ? token.getValue() : token;\n        localStorage.setItem(this.getConfigValue('token.key'), raw);\n        return Observable.of(null);\n      },\n\n      deleter: (): Observable<null> => {\n        localStorage.removeItem(this.getConfigValue('token.key'));\n        return Observable.of(null);\n      },\n    },\n  };\n  protected config: any = {};\n  protected token$: BehaviorSubject<any> = new BehaviorSubject(null);\n\n  constructor(@Inject(NB_AUTH_OPTIONS_TOKEN) protected options: any,\n              @Inject(NB_AUTH_TOKEN_WRAPPER_TOKEN) protected tokenWrapper: NbAuthSimpleToken) {\n    this.setConfig(options);\n\n    this.get().subscribe(token => this.publishToken(token));\n  }\n\n  setConfig(config: any): void {\n    this.config = deepExtend({}, this.defaultConfig, config);\n  }\n\n  getConfigValue(key: string): any {\n    return getDeepFromObject(this.config, key, null);\n  }\n\n  set(rawToken: string): Observable<null> {\n    return this.getConfigValue('token.setter')(rawToken)\n      .switchMap(_ => this.get())\n      .do((token: NbAuthSimpleToken) => {\n        this.publishToken(token);\n      });\n  }\n\n  get(): Observable<NbAuthSimpleToken> {\n    return this.getConfigValue('token.getter')();\n  }\n\n  tokenChange(): Observable<NbAuthSimpleToken> {\n    return this.token$.publish().refCount();\n  }\n\n  clear(): Observable<any> {\n    this.publishToken(null);\n\n    return this.getConfigValue('token.deleter')();\n  }\n\n  protected publishToken(token: NbAuthSimpleToken): void {\n    this.token$.next(token);\n  }\n}\n"]}