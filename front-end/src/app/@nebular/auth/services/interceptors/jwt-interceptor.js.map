{"version":3,"file":"jwt-interceptor.js","sourceRoot":"","sources":["../../../../../.ng_build/auth/services/interceptors/jwt-interceptor.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAGrD,OAAO,6BAA6B,CAAC;AAErC,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAIhD,IAAa,oBAAoB;IAE/B,8BAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IACtC,CAAC;IAED,wCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAEhD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;aAC/B,SAAS,CAAC,UAAC,KAAqB;YAC/B,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACV,IAAM,GAAG,GAAG,YAAU,KAAK,CAAC,QAAQ,EAAI,CAAC;gBACzC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;oBACd,UAAU,EAAE;wBACV,aAAa,EAAE,GAAG;qBACnB;iBACF,CAAC,CAAC;YACL,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sBAAc,6CAAW;aAAzB;YACE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC1C,CAAC;;;OAAA;IACH,2BAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,oBAAoB;IADhC,UAAU,EAAE;qCAGmB,QAAQ;GAF3B,oBAAoB,CAwBhC;SAxBY,oBAAoB","sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/switchMap';\n\nimport { NbAuthService } from '../auth.service';\nimport { NbAuthJWTToken } from '../token.service';\n\n@Injectable()\nexport class NbAuthJWTInterceptor implements HttpInterceptor {\n\n  constructor(private injector: Injector) {\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return this.authService.getToken()\n      .switchMap((token: NbAuthJWTToken) => {\n        if (token) {\n          const JWT = `Bearer ${token.getValue()}`;\n          req = req.clone({\n            setHeaders: {\n              Authorization: JWT,\n            },\n          });\n        }\n        return next.handle(req);\n      });\n  }\n\n  protected get authService(): NbAuthService {\n    return this.injector.get(NbAuthService);\n  }\n}\n"]}