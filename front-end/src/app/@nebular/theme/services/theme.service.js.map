{"version":3,"file":"theme.service.js","sourceRoot":"","sources":["../../../../.ng_build/theme/services/theme.service.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Inject, Injectable, Type } from '@angular/core';\n\nimport { Observable } from 'rxjs/Observable';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport 'rxjs/add/operator/publish';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/pairwise';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/startWith';\n\nimport { nbThemeOptionsToken } from '../theme.options';\nimport { NbJSThemeOptions } from './js-themes/theme.options';\nimport { NbJSThemesRegistry } from './js-themes-registry.service';\nimport { NbMediaBreakpointsService, NbMediaBreakpoint } from './breakpoints.service';\n\n/**\n * Main Nebular service. Includes various helper methods.\n */\n@Injectable()\nexport class NbThemeService {\n\n  // TODO: behavioral subject here?\n  currentTheme: string;\n  private themeChanges$ = new ReplaySubject(1);\n  private appendToLayoutTop$ = new ReplaySubject();\n  private createLayoutTop$ = new Subject();\n  private appendLayoutClass$ = new Subject();\n  private removeLayoutClass$ = new Subject();\n  private changeWindowWidth$ = new ReplaySubject<number>(2);\n\n  constructor(@Inject(nbThemeOptionsToken) protected options: any,\n              private breakpointService: NbMediaBreakpointsService,\n              private jsThemesRegistry: NbJSThemesRegistry) {\n    if (options && options.name) {\n      this.changeTheme(options.name);\n    }\n  }\n\n  changeTheme(name: string): void {\n    this.themeChanges$.next({ name, previous: this.currentTheme });\n    this.currentTheme = name;\n  }\n\n  changeWindowWidth(width: number): void {\n    this.changeWindowWidth$.next(width);\n  }\n\n  appendToLayoutTop<T>(component: Type<T>): Observable<any> {\n    const subject = new ReplaySubject(1);\n    this.appendToLayoutTop$.next({ component, listener: subject });\n    return subject.asObservable();\n  }\n\n  /**\n   * Returns a theme object with variables (color/paddings/etc) on a theme change.\n   * Once subscribed - returns current theme.\n   *\n   * @returns {Observable<NbJSThemeOptions>}\n   */\n  getJsTheme(): Observable<NbJSThemeOptions> {\n    return this.onThemeChange().map((theme: any) => {\n      return this.jsThemesRegistry.get(theme.name);\n    });\n  }\n\n  clearLayoutTop(): Observable<any> {\n    const observable = new BehaviorSubject(null);\n    this.createLayoutTop$.next({ listener: observable });\n    this.appendToLayoutTop$ = new ReplaySubject();\n    return observable.asObservable();\n  }\n\n  /**\n   * Triggers media query breakpoint change\n   * Returns a pair where the first item is previous media breakpoint and the second item is current breakpoit.\n   * ```\n   *  [{ name: 'xs', width: 0 }, { name: 'md', width: 768 }] // change from `xs` to `md`\n   * ```\n   * @returns {Observable<[NbMediaBreakpoint, NbMediaBreakpoint]>}\n   */\n  onMediaQueryChange(): Observable<[NbMediaBreakpoint, NbMediaBreakpoint]> {\n    return this.changeWindowWidth$\n      .startWith(undefined)\n      .pairwise()\n      .map(([prevWidth, width]: [number, number]) => {\n        return [\n          this.breakpointService.getByWidth(prevWidth),\n          this.breakpointService.getByWidth(width),\n        ]\n      })\n      .filter(([prevPoint, point]: [NbMediaBreakpoint, NbMediaBreakpoint]) => {\n        return prevPoint.name !== point.name;\n      })\n      .distinctUntilChanged(null, params => params[0].name + params[1].name)\n      .publish()\n      .refCount();\n  }\n\n  onThemeChange(): Observable<any> {\n    return this.themeChanges$.publish().refCount();\n  }\n\n  onAppendToTop(): Observable<any> {\n    return this.appendToLayoutTop$.publish().refCount();\n  }\n\n  onClearLayoutTop(): Observable<any> {\n    return this.createLayoutTop$.publish().refCount();\n  }\n\n  appendLayoutClass(className: string) {\n    this.appendLayoutClass$.next(className);\n  }\n\n  onAppendLayoutClass(): Observable<any> {\n    return this.appendLayoutClass$.publish().refCount();\n  }\n\n  removeLayoutClass(className: string) {\n    this.removeLayoutClass$.next(className);\n  }\n\n  onRemoveLayoutClass(): Observable<any> {\n    return this.removeLayoutClass$.publish().refCount();\n  }\n}\n"]}