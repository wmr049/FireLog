{"version":3,"file":"actions.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/actions/actions.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EACL,SAAS,EACT,KAAK,EACL,WAAW,GACZ,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;AAEnD;;GAEG;AAYH,IAAa,iBAAiB;IAX9B;QAaiC,kBAAa,GAAY,KAAK,CAAC;IAgBhE,CAAC;IAHC,sBAAI,uCAAQ;QALZ;;;WAGG;aAEH,UAAa,GAAY;YACvB,IAAI,CAAC,aAAa,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAClD,CAAC;;;OAAA;IACH,wBAAC;AAAD,CAAC,AAlBD,IAkBC;AAhBgC;IAA9B,WAAW,CAAC,gBAAgB,CAAC;;wDAAgC;AAMrD;IAAR,KAAK,EAAE;;+CAAc;AAOtB;IADC,KAAK,EAAE;;;iDAGP;AAjBU,iBAAiB;IAX7B,SAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,QAAQ,EAAE,wQAOT;KACF,CAAC;GACW,iBAAiB,CAkB7B;SAlBY,iBAAiB;AAoB9B;;;;;;;;;;;;;;;;GAgBG;AAQH,IAAa,kBAAkB;IAP/B;QAiCU,mBAAc,GAAY,KAAK,CAAC;IA4B1C,CAAC;IA3CC,sBAAI,qCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,oBAAkB,CAAC,UAAU,CAAC;QAC1D,CAAC;;;OAAA;IAGD,sBAAI,sCAAM;aAAV;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,oBAAkB,CAAC,WAAW,CAAC;QAC3D,CAAC;;;OAAA;IAGD,sBAAI,qCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,oBAAkB,CAAC,UAAU,CAAC;QAC1D,CAAC;;;OAAA;IAUD,sBAAI,oCAAI;QALR;;;WAGG;aAEH,UAAS,GAAW;YAClB,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;QACvB,CAAC;;;OAAA;IAOD,sBAAI,uCAAO;QALX;;;WAGG;aAEH,UAAY,GAAY;YACtB,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;QACjD,CAAC;;;OAAA;IAOD,sBAAI,yCAAS;QALb;;;WAGG;aAEH,UAAc,GAAY;YACxB,IAAI,CAAC,cAAc,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;QACnD,CAAC;;;OAAA;IACH,yBAAC;AAAD,CAAC,AAtDD,IAsDC;AApDiB,6BAAU,GAAG,OAAO,CAAC;AACrB,8BAAW,GAAG,QAAQ,CAAC;AACvB,6BAAU,GAAG,OAAO,CAAC;AAIP;IAA7B,WAAW,CAAC,eAAe,CAAC;;wDAAuB;AAGpD;IADC,WAAW,CAAC,aAAa,CAAC;;;+CAG1B;AAGD;IADC,WAAW,CAAC,cAAc,CAAC;;;gDAG3B;AAGD;IADC,WAAW,CAAC,aAAa,CAAC;;;+CAG1B;AAGD;IADC,WAAW,CAAC,kBAAkB,CAAC;;0DACQ;AAOxC;IADC,KAAK,EAAE;;;8CAGP;AAOD;IADC,KAAK,EAAE;;;iDAGP;AAOD;IADC,KAAK,EAAE;;;mDAGP;AArDU,kBAAkB;IAP9B,SAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,SAAS,EAAE,CAAC,yBAAyB,CAAC;QACtC,QAAQ,EAAE,0DAET;KACF,CAAC;GACW,kBAAkB,CAsD9B;SAtDY,kBAAkB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Component,\n  Input,\n  HostBinding,\n} from '@angular/core';\n\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Action item, display a link with an icon, or any other content provided instead.\n */\n@Component({\n  selector: 'nb-action',\n  template: `\n    <a class=\"icon-container\" href=\"#\" *ngIf=\"icon; else showContent\" (click)=\"$event.preventDefault()\">\n      <i class=\"control-icon {{ icon }}\"></i>\n    </a>\n    <ng-template #showContent>\n      <ng-content></ng-content>\n    </ng-template>\n  `,\n})\nexport class NbActionComponent {\n\n  @HostBinding('class.disabled') disabledValue: boolean = false;\n\n  /**\n   * Icon class to display\n   * @type string\n   */\n  @Input() icon: string;\n\n  /**\n   * Disables the item (changes item opacity and mouse cursor)\n   * @type boolean\n   */\n  @Input()\n  set disabled(val: boolean) {\n    this.disabledValue = convertToBoolProperty(val);\n  }\n}\n\n/**\n * Shows a horizontal list of actions, available in multiple sizes\n * Aligns items vertically.\n *\n * @styles\n *\n * actions-font-size:\n * actions-font-family:\n * actions-line-height:\n * actions-fg:\n * actions-bg:\n * actions-separator:\n * actions-padding:\n * actions-size-small:\n * actions-size-medium:\n * actions-size-large:\n */\n@Component({\n  selector: 'nb-actions',\n  styleUrls: ['./actions.component.css'],\n  template: `\n    <ng-content select=\"nb-action\"></ng-content>\n  `,\n})\nexport class NbActionsComponent {\n\n  static readonly SIZE_SMALL = 'small';\n  static readonly SIZE_MEDIUM = 'medium';\n  static readonly SIZE_LARGE = 'large';\n\n  private sizeValue: string;\n\n  @HostBinding('class.inverse') inverseValue: boolean;\n\n  @HostBinding('class.small')\n  get small() {\n    return this.sizeValue === NbActionsComponent.SIZE_SMALL;\n  }\n\n  @HostBinding('class.medium')\n  get medium() {\n    return this.sizeValue === NbActionsComponent.SIZE_MEDIUM;\n  }\n\n  @HostBinding('class.large')\n  get large() {\n    return this.sizeValue === NbActionsComponent.SIZE_LARGE;\n  }\n\n  @HostBinding('class.full-width')\n  private fullWidthValue: boolean = false;\n\n  /**\n   * Size of the component, small|medium|large\n   * @type string\n   */\n  @Input()\n  set size(val: string) {\n    this.sizeValue = val;\n  }\n\n  /**\n   * Makes colors inverse based on current theme\n   * @type boolean\n   */\n  @Input()\n  set inverse(val: boolean) {\n    this.inverseValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Component will fill full width of the container\n   * @type boolean\n   */\n  @Input()\n  set fullWidth(val: boolean) {\n    this.fullWidthValue = convertToBoolProperty(val);\n  }\n}\n"]}