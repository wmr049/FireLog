{"version":3,"file":"user.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/user/user.component.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input, HostBinding, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Action dropdown menu\n */\nexport class NbUserMenuItem {\n  /**\n   * Menu title\n   * @type string\n   */\n  title: string;\n  /**\n   * Menu link for [routerLink] directive\n   * @type string\n   */\n  link?: string;\n  /**\n   * URL for absolute urls, used directly in href\n   * @type string\n   */\n  url?: string;\n  /**\n   * Link target (_blank, _self, etc)\n   * @type string\n   */\n  target?: string;\n  /**\n   * Icon class\n   * @type string\n   */\n  icon?: string;\n}\n\n/**\n * Represents a component showing a user avatar (picture) with a user name on the right.\n *\n * Can be used as a user profile link or can bring a user context menu.\n *\n * @styles\n *\n * user-font-size:\n * user-line-height:\n * user-bg:\n * user-fg:\n * user-fg-highlight:\n * user-font-family-secondary:\n * user-size-small:\n * user-size-medium:\n * user-size-large:\n * user-size-xlarge:\n * user-menu-fg:\n * user-menu-bg:\n * user-menu-active-fg:\n * user-menu-active-bg:\n * user-menu-border:\n */\n@Component({\n  selector: 'nb-user',\n  styleUrls: ['./user.component.css'],\n  templateUrl: './user.component.html',\n})\nexport class NbUserComponent {\n\n  // TODO: it makes sense use object instead of list of variables (or even enum)\n  /*\n    static readonly SIZE = {\n     SMALL: 'small',\n     MEDIUM: 'medium',\n     LARGE: 'large',\n    };\n   */\n  static readonly SIZE_SMALL = 'small';\n  static readonly SIZE_MEDIUM = 'medium';\n  static readonly SIZE_LARGE = 'large';\n  static readonly SIZE_XLARGE = 'xlarge';\n\n  private sizeValue: string;\n\n  @HostBinding('class.inverse') inverseValue: boolean;\n\n  @HostBinding('class.small')\n  get small() {\n    return this.sizeValue === NbUserComponent.SIZE_SMALL;\n  }\n\n  @HostBinding('class.medium')\n  get medium() {\n    return this.sizeValue === NbUserComponent.SIZE_MEDIUM;\n  }\n\n  @HostBinding('class.large')\n  get large() {\n    return this.sizeValue === NbUserComponent.SIZE_LARGE;\n  }\n\n  @HostBinding('class.xlarge')\n  get xlarge() {\n    return this.sizeValue === NbUserComponent.SIZE_XLARGE;\n  }\n\n  /**\n   * Specifies a name to be shown on the right of a user picture\n   * @type string\n   */\n  @Input() name: string = 'Anonymous';\n\n  /**\n   * Specifies a title (written in a smaller font) to be shown under the **name**\n   * @type string\n   */\n  @Input() title: string;\n\n  /**\n   * Absolute path to a user picture\n   * User name initials (JD for John Doe) will be shown if no picture specified\n   * @type string\n   */\n  @Input() picture: string;\n\n  /**\n   * Color of the area shown when no picture specified\n   * @type string\n   */\n  @Input() color: string;\n\n  /**\n   * List of menu items for a user context menu (shown when clicked)\n   * @type NbUserMenuItem[]\n   */\n  @Input() menu: NbUserMenuItem[] = [];\n\n  /**\n   * Size of the component, small|medium|large\n   * @type string\n   */\n  @Input()\n  set size(val: string) {\n    this.sizeValue = val;\n  }\n\n  /**\n   * Whether to show a user name or not\n   * @type boolean\n   */\n  @Input()\n  set showName(val: boolean) {\n    this.showNameValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Whether to show a user title or not\n   * @type boolean\n   */\n  @Input()\n  set showTitle(val: boolean) {\n    this.showTitleValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Whether to show a user initials (if no picture specified) or not\n   * @type boolean\n   */\n  @Input()\n  set showInitials(val: boolean) {\n    this.showInitialsValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Whether to show only a picture or also show the name and title\n   * @type boolean\n   */\n  @Input()\n  set onlyPicture(val: boolean) {\n    this.showNameValue = this.showTitleValue = !convertToBoolProperty(val);\n  }\n\n  /**\n   * Makes colors inverse based on current theme\n   * @type boolean\n   */\n  @Input()\n  set inverse(val: boolean) {\n    this.inverseValue = convertToBoolProperty(val);\n  }\n\n  /**\n   * Outputs when a context menu item is clicked\n   * @type EventEmitter<NbUserMenuItem>\n   */\n  @Output() menuClick = new EventEmitter<NbUserMenuItem>();\n\n  showNameValue: boolean = true;\n  showTitleValue: boolean = true;\n  showInitialsValue: boolean = true;\n  isMenuShown: boolean = false;\n\n  constructor(private el: ElementRef) { }\n\n  itemClick(event: any, item: NbUserMenuItem): boolean {\n    this.menuClick.emit(item);\n    return false;\n  }\n\n  /**\n   * Toggles a context menu\n   */\n  toggleMenu() {\n    this.isMenuShown = !this.isMenuShown;\n  }\n\n  @HostListener('document:click', ['$event'])\n  hideMenu(event: any) {\n    if (!this.el.nativeElement.contains(event.target)) {\n      this.isMenuShown = false;\n    }\n  }\n\n  getInitials(): string {\n    if (this.name) {\n      const names = this.name.split(' ');\n\n      return names.map(n => n.charAt(0)).splice(0, 2).join('').toUpperCase();\n    }\n\n    return '';\n  }\n\n  hasMenu(): boolean {\n    return this.menu && this.menu.length > 0;\n  }\n\n}\n"]}