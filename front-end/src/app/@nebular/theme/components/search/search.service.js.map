{"version":3,"file":"search.service.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/search/search.service.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;AAEH,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AAEvC,OAAO,yBAAyB,CAAC;AAEjC;;GAEG;AAEH,IAAa,eAAe;IAD5B;QAEU,uBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;QACnC,uBAAkB,GAAG,IAAI,OAAO,EAAE,CAAC;QACnC,yBAAoB,GAAG,IAAI,OAAO,EAAE,CAAC;IAoD/C,CAAC;IAlDC;;;;OAIG;IACH,wCAAc,GAAd,UAAe,UAAkB,EAAE,GAAY;QAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,UAAU,YAAA,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;IACpD,CAAC;IAED;;;;OAIG;IACH,0CAAgB,GAAhB,UAAiB,UAAkB,EAAE,GAAY;QAC/C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,EAAE,UAAU,YAAA,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACH,sCAAY,GAAZ,UAAa,IAAY,EAAE,GAAY;QACrC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,IAAI,MAAA,EAAE,GAAG,KAAA,EAAE,CAAC,CAAC;IAC9C,CAAC;IAED;;;OAGG;IACH,0CAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;IAED;;;OAGG;IACH,4CAAkB,GAAlB;QACE,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACH,wCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;IACzC,CAAC;IACH,sBAAC;AAAD,CAAC,AAvDD,IAuDC;AAvDY,eAAe;IAD3B,UAAU,EAAE;GACA,eAAe,CAuD3B;SAvDY,eAAe","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/share';\n\n/**\n * Search component service, connects you code to a page-level search component.\n */\n@Injectable()\nexport class NbSearchService {\n  private searchSubmittings$ = new Subject();\n  private searchActivations$ = new Subject();\n  private searchDeactivations$ = new Subject();\n\n  /***\n   * Activate (open) search component\n   * @param {string} searchType\n   * @param {string} tag\n   */\n  activateSearch(searchType: string, tag?: string) {\n    this.searchActivations$.next({ searchType, tag });\n  }\n\n  /**\n   * Deactibate (close) search component\n   * @param {string} searchType\n   * @param {string} tag\n   */\n  deactivateSearch(searchType: string, tag?: string) {\n    this.searchDeactivations$.next({ searchType, tag });\n  }\n\n  /**\n   * Trigger search submit\n   * @param {string} term\n   * @param {string} tag\n   */\n  submitSearch(term: string, tag?: string) {\n    this.searchSubmittings$.next({ term, tag });\n  }\n\n  /**\n   * Subscribe to 'activate' event\n   * @returns Observable<{searchType: string; tag?: string}>\n   */\n  onSearchActivate(): Observable<{ searchType: string, tag?: string }> {\n    return this.searchActivations$.share();\n  }\n\n  /**\n   * Subscribe to 'deactivate' event\n   * @returns Observable<{searchType: string; tag?: string}>\n   */\n  onSearchDeactivate(): Observable<{ searchType: string, tag?: string }> {\n    return this.searchDeactivations$.share();\n  }\n\n  /**\n   * Subscribe to 'submit' event (when submit button clicked)\n   * @returns Observable<{term: string; tag?: string}>\n   */\n  onSearchSubmit(): Observable<{ term: string, tag?: string }> {\n    return this.searchSubmittings$.share();\n  }\n}\n"]}