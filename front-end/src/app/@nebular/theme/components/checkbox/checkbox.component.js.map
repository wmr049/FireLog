{"version":3,"file":"checkbox.component.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/checkbox/checkbox.component.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;;;;;;;;;AAEH,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC1E,OAAO,EAAwB,iBAAiB,EAAE,MAAM,gBAAgB,CAAC;AACzE,OAAO,EAAE,qBAAqB,EAAE,MAAM,YAAY,CAAC;AAEnD;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AAqBH,IAAa,mBAAmB;IApBhC;QAwBE;;;;WAIG;QACa,WAAM,GAAY,KAAK,CAAC;QAExC,aAAQ,GAAY,KAAK,CAAC;QA8B1B,aAAQ,GAAQ,cAAQ,CAAC,CAAC;QAC1B,cAAS,GAAQ,cAAQ,CAAC,CAAC;IAuB7B,CAAC;IApDC,sBAAI,4CAAW;aAAf,UAAgB,GAAY;YAC1B,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAC7C,CAAC;;;OAAA;IAOD,sBAAY,0CAAS;QALrB;;;WAGG;aAEH,UAAsB,GAAW;YAC/B,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;QACpB,CAAC;;;OAAA;IAGD,sBAAY,wCAAO;aAAnB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;QACnC,CAAC;;;OAAA;IAGD,sBAAY,wCAAO;aAAnB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,SAAS,CAAC;QACnC,CAAC;;;OAAA;IAGD,sBAAY,uCAAM;aAAlB;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC;QAClC,CAAC;;;OAAA;IAKD,sBAAI,sCAAK;aAAT;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAU,GAAG;YACX,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC;YAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;;;OANA;IAQD,8CAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,+CAAiB,GAAjB,UAAkB,EAAO;QACvB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,wCAAU,GAAV,UAAW,GAAQ;QACjB,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACnB,CAAC;IACH,0BAAC;AAAD,CAAC,AAjED,IAiEC;AAxDiB;IAAf,KAAK,CAAC,OAAO,CAAC;;mDAAyB;AAIxC;IADC,KAAK,CAAC,UAAU,CAAC;;;sDAGjB;AAOD;IADC,KAAK,CAAC,QAAQ,CAAC;;;oDAGf;AAGD;IADC,WAAW,CAAC,eAAe,CAAC;;;kDAG5B;AAGD;IADC,WAAW,CAAC,eAAe,CAAC;;;kDAG5B;AAGD;IADC,WAAW,CAAC,cAAc,CAAC;;;iDAG3B;AAvCU,mBAAmB;IApB/B,SAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,QAAQ,EAAE,yZAWT;QACD,SAAS,EAAE,CAAC;gBACV,OAAO,EAAE,iBAAiB;gBAC1B,WAAW,EAAE,UAAU,CAAC,cAAM,OAAA,qBAAmB,EAAnB,CAAmB,CAAC;gBAClD,KAAK,EAAE,IAAI;aACZ,CAAC;KACH,CAAC;GACW,mBAAmB,CAiE/B;SAjEY,mBAAmB","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { Component, Input, HostBinding, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { convertToBoolProperty } from '../helpers';\n\n/**\n * Styled checkbox component\n *\n * @example Basic example\n *\n * ```\n *  <nb-checkbox [(ngModel)]=\"enabled\">Enabled?</nb-checkbox>\n * ```\n *\n * @example Example with status\n *\n * ```\n *  <nb-checkbox [(ngModel)]=\"enabled\" status=\"danger\">Enabled?</nb-checkbox>\n * ```\n *\n * @styles\n *\n * checkbox-bg:\n * checkbox-size:\n * checkbox-border-size:\n * checkbox-border-color:\n * checkbox-selected-border-color:\n * checkbox-fg:\n * radio-fg:\n */\n@Component({\n  selector: 'nb-checkbox',\n  template: `\n    <label class=\"custom-control custom-checkbox\">\n      <input type=\"checkbox\" class=\"custom-control-input\"\n             [disabled]=\"disabled\"\n             [checked]=\"value\"\n             (change)=\"value = !value\">\n      <span class=\"custom-control-indicator\"></span>\n      <span class=\"custom-control-description\">\n        <ng-content></ng-content>\n      </span>\n    </label>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NbCheckboxComponent),\n    multi: true,\n  }],\n})\nexport class NbCheckboxComponent implements ControlValueAccessor {\n\n  status: string;\n\n  /**\n   * Checkbox value\n   * @type {boolean}\n   * @private\n   */\n  @Input('value') _value: boolean = false;\n\n  disabled: boolean = false;\n  @Input('disabled')\n  set setDisabled(val: boolean) {\n    this.disabled = convertToBoolProperty(val);\n  }\n\n  /**\n   * Checkbox status (success, warning, danger)\n   * @param {string} val\n   */\n  @Input('status')\n  private set setStatus(val: string) {\n    this.status = val;\n  }\n\n  @HostBinding('class.success')\n  private get success() {\n    return this.status === 'success';\n  }\n\n  @HostBinding('class.warning')\n  private get warning() {\n    return this.status === 'warning';\n  }\n\n  @HostBinding('class.danger')\n  private get danger() {\n    return this.status === 'danger';\n  }\n\n  onChange: any = () => { };\n  onTouched: any = () => { };\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.onChange(val);\n    this.onTouched();\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  writeValue(val: any) {\n    this.value = val;\n  }\n}\n"]}